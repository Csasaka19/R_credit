mutate(
Birthdate = dmy(Birthdate),
Age = as.integer(interval(Birthdate, Sys.Date()) / years(1)),
Month = month(Date),
Year = year(Date),
Transaction_Frequency = ave(Transaction.Amount, Customer.ID, FUN = length),
Transaction_Category_Count = ave(Transaction.Amount, Category, FUN = length)
)
str(more_credit)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim=c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 15
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim= c(max_height(50000)),
breaks= 10
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim= c(max(50000)),
breaks= 10
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 10
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 8
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 15
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 20
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
breaks= 20
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 20
)
?par()
par(mar = c(5, 4, 4, 2) + 0.1) # Adjusts margins of the plots
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 20
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 15
)
par(mar = c(5, 4, 4, 2) + 0.1) # Adjusts margins of the plots
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue1",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="red",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
?boxplot
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of transaction amount by Category",
xlab = "Transaction Amount",
ylab = "Category",
border= "black",
col= "grey",
notch= TRUE
)
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of transaction amount by Category",
xlab = "Transaction Amount",
ylab = "Category",
border= "black",
col= "grey",
)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
?heatmap
?violinplot
?geom_violin
str(more_credit)
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of Categories by Transaction",
xlab = "Categories",
ylab = "Transaction Amount in Dollars",
border= "black",
col= "grey",
)
head(more_credit)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of Categories by Transaction",
xlab = "Categories",
ylab = "Transaction Amount in Dollars",
border= "black",
col= "grey",
)
ggplot(df, aes(fill=position, y=more_credit$Transaction.Amount, x=more_credit$Category)) +
geom_bar(position='stack', stat='identity')
library(ggplot2)
ggplot(df, aes(fill=position, y=more_credit$Transaction.Amount, x=more_credit$Category)) +
geom_bar(position='stack', stat='identity')
ggplot(more_credit, aes(fill=position, y=more_credit$Transaction.Amount, x=more_credit$Category)) +
geom_bar(position='stack', stat='identity')
ggplot(more_credit, aes(fill=position, y=more_credit$Transaction.Amount, x=more_credit$Category)) +
geom_bar(Category='stack', stat='identity')
ggplot(more_credit, aes(fill=position, y=more_credit$Transaction.Amount, x=more_credit$Category))
ggplot(more_credit, aes(fill=Category, y=more_credit$Transaction.Amount, x=more_credit$Category))
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Category))
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Category))  +
geom_bar(Category='stack', stat='identity')
head(more_credit)
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Category))  +
geom_bar(Month='stack', stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Category))  +
geom_bar(More_credit$Month='stack', stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Category))  +
geom_bar(Month='stack')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month))  +
geom_bar(Month='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month))  +
geom_bar(Category='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month))
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(Category='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(Category='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Year)) +
geom_bar(Category='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=month)) +
geom_bar(Category='stack',stat='identity')
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(Category='stack',stat='identity')
#Creating a Stacked bar plot
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(stat='identity')
?piechart
pie(more_credit, labels = Category, main = "Pie Chart Example", col = rainbow(length(more_credit)))
pie(more_credit, labels = Month, main = "Pie Chart Example", col = rainbow(length(more_credit)))
pie(more_credit, labels = Month, main = "Pie Chart Example", col = rainbow(length(more_credit)))
more_credit <- data.frame(Month = c("January", "February", "March", "April"),
Value = c(30, 20, 15, 35))
pie(more_credit, labels = Month, main = "Pie Chart Example", col = rainbow(length(more_credit)))
?goem
?goem_line
# Relevant libraries
library(dplyr)          # Data manipulation library
library(ggplot2)        # Static visualization library
library(lubridate)      # Datetime library
# Imports the data from a csv file
credit <- read.csv("~/Ubuntu_projects/R/credit-card-transaction/credit_card_transaction_flow.csv")
# Imports the data from a csv file
credit <- read.csv("~/R_credit/credit-card-transaction/credit_card_transaction_flow.csv")
more_credit <- credit %>%
select(Customer.ID, Birthdate, Date, Transaction.Amount, Category, Gender, Name, Surname, Merchant.Name) %>%
distinct() %>%
filter(!is.na(Birthdate)) %>%
mutate(
Birthdate = dmy(Birthdate),
Age = as.integer(interval(Birthdate, Sys.Date()) / years(1)),
Month = month(Date),
Year = year(Date),
Transaction_Frequency = ave(Transaction.Amount, Customer.ID, FUN = length),
Transaction_Category_Count = ave(Transaction.Amount, Category, FUN = length)
)
str(more_credit)
head(more_credit)
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of Categories by Transaction",
xlab = "Categories",
ylab = "Transaction Amount in Dollars",
border= "black",
col= "grey",
)
#Creating a Stacked bar plot
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(stat='identity')
# Create a pie chart from a data frame
pie(more_credit$Value, labels = more_credit$Month, main = "Pie Chart Example", col = rainbow(nrow(more_credit)))
# Create a pie chart from a data frame
piechart(more_credit$Gender, edges = 200, radius= 0.8)
# Create a pie chart from a data frame
gender_counts <- table(more_credit$Gender)
colors <- c("skyblue", "pink")  # You can adjust colors as needed
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Male", "Female"),
col = colors,
border = "white",
clockwise = TRUE
)
gender_counts <- table(more_credit$Gender)
colors <- c("skyblue", "pink","green")
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Male", "Female", "Uknown"),
col = colors,
border = "white",
clockwise = TRUE
)
?pie
# Create a pie chart from a data frame
gender_counts <- table(more_credit$Gender)
colors <- c("green", "pink","skyblue")
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
col = colors,
border = "black",
clockwise = TRUE,
raduis = 0.9,
init.angle = if(clockwise) 90 else 0
)
# Create a pie chart from a data frame
gender_counts <- table(more_credit$Gender)
colors <- c("green", "pink","skyblue")
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
col = colors,
border = "black",
clockwise = TRUE,
raduis = 0.9,
angle = 60
)
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
col = colors,
border = "black",
clockwise = TRUE,
radius = 0.9,
angle = 60
)
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
col = colors,
border = "black",
clockwise = TRUE,
angle = 60
)
L
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
edges = 200,
radius = 0.8,
col = colors,
border = "black",
clockwise = TRUE,
angle = 60
)
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
edges = 400,
radius = 0.8,
col = colors,
border = "black",
clockwise = TRUE,
angle = 60
)
?plot
ggplot(more_credit, aes(x = paste(Year, Month, sep = "-"), group = 1)) +
geom_line(stat = "count", aes(y = ..count.., color = "blue")) +
scale_x_discrete(labels = scales::date_format("%Y-%m")) +
labs(title = "Line Plot of Transaction Frequency Over Time",
x = "Month and Year",
y = "Transaction Frequency") +
theme_minimal()
ggplot(more_credit, aes(x = paste(Year, Month, sep = "-"), group = 1)) +
geom_line(stat = "count", aes(y = ..count.., color = "blue")) +
scale_x_discrete(labels = scales::date_format("%Y-%m")) +
labs(title = "Line Plot of Transaction Frequency Over Time",
x = "Month and Year",
y = "Transaction Frequency") +
theme_minimal()
# Relevant libraries
library(dplyr)          # Data manipulation library
library(ggplot2) # Static visualization library
library(lubridate)      # Datetime library
# Imports the data from a csv file
credit <- read.csv("~/R_credit/credit-card-transaction/credit_card_transaction_flow.csv")
more_credit <- credit %>%
select(Customer.ID, Birthdate, Date, Transaction.Amount, Category, Gender, Name, Surname, Merchant.Name) %>%
distinct() %>%
filter(!is.na(Birthdate)) %>%
mutate(
Birthdate = dmy(Birthdate),
Age = as.integer(interval(Birthdate, Sys.Date()) / years(1)),
Month = month(Date),
Year = year(Date),
Transaction_Frequency = ave(Transaction.Amount, Customer.ID, FUN = length),
Transaction_Category_Count = ave(Transaction.Amount, Category, FUN = length)
)
str(more_credit)
head(more_credit)
# Plots
# A histogram to track transaction amount and identify outliers
hist(more_credit$Transaction.Amount,
main="Histogram on transaction Amount",
xlab="Transaction Amount in Dollars",
ylab="Frequency",
col="blue",
border="black",
xlim= c(min(more_credit$Transaction.Amount), max(more_credit$Transaction.Amount)),
ylim = c(0, max(more_credit$Transaction.Amount)),
breaks= 12
)
# Box plot for Category analysis
boxplot(more_credit$Transaction.Amount ~ more_credit$Category,
main = "Boxplot of Categories by Transaction",
xlab = "Categories",
ylab = "Transaction Amount in Dollars",
border= "black",
col= "grey",
)
# Creating a Stacked bar plot for category analysis
ggplot(more_credit, aes(fill=Category, y=Transaction.Amount, x=Month)) +
geom_bar(stat='identity')
# Create a pie chart on Gender
gender_counts <- table(more_credit$Gender)
colors <- c("green", "pink","skyblue")
pie(gender_counts,
main = "Pie Chart of Gender Distribution",
labels = c("Not specified", "Female", "Male"),
edges = 400,
radius = 0.8,
col = colors,
border = "black",
clockwise = TRUE,
angle = 60
)
ggplot(more_credit, aes(x = paste(Year, Month, sep = "-"), group = 1)) +
geom_line(stat = "count", aes(y = ..count.., color = "blue")) +
scale_x_discrete(labels = scales::date_format("%Y-%m")) +
labs(title = "Line Plot of Transaction Frequency Over Time",
x = "Month and Year",
y = "Transaction Frequency") +
theme_minimal()
ggplot(more_credit, aes(x = paste(Year, Month, sep = "-"), group = 1)) +
geom_line(stat = "count", aes(y = after_stat(count), color = "blue")) +
scale_x_discrete(labels = scales::date_format("%Y-%m")) +
labs(title = "Line Plot of Transaction Frequency Over Time",
x = "Month and Year",
y = "Transaction Frequency") +
theme_minimal()
library(shiny)
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
install.packages("shiny")
library(shiny)
library("shinydashboard")
library(shiny)
library(shiny)
library("shiny")
install.packages("shiny", repos = "https://cran.r-project.org")
install.packages("shiny", dependencies = TRUE)
shiny::runApp('R_credit/Credit-App')
install.packages("shiny")
shiny::runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
?runApp
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
input$bins
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
?sidebarPanel
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
runApp('R_credit/Credit-App')
